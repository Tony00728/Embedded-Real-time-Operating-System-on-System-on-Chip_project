import cv2
import LCD1602
import time
import serial
import numpy as np

ser = serial.Serial('/dev/ttyACM0', 9600, timeout=1) # 開啟與 Arduino 通訊的串口

#thres = 0.45 # Threshold to detect object
LCD1602.init(0x27, 1)
# 定義紅綠燈顏色的上下界值
lower_red = np.array([0, 50, 50])
upper_red = np.array([10, 255, 255])
lower_green = np.array([50, 50, 50])
upper_green = np.array([70, 255, 255])


classNames = []
classFile = "/home/pi/Object_Detection_Files/coco.names"
with open(classFile,"rt") as f:
    classNames = f.read().rstrip("\n").split("\n")

configPath = "/home/pi/Object_Detection_Files/ssd_mobilenet_v3_large_coco_2020_01_14.pbtxt"
weightsPath = "/home/pi/Object_Detection_Files/frozen_inference_graph.pb"

net = cv2.dnn_DetectionModel(weightsPath,configPath)
net.setInputSize(320,320)
net.setInputScale(1.0/ 127.5)
net.setInputMean((127.5, 127.5, 127.5))
net.setInputSwapRB(True)


def getObjects(img, thres, nms, draw=True, objects=[]):
    classIds, confs, bbox = net.detect(img,confThreshold=thres,nmsThreshold=nms)
    #print(classIds,bbox)
    if len(objects) == 0: objects = classNames
    objectInfo =[]
    if len(classIds) != 0:
        for classId, confidence,box in zip(classIds.flatten(),confs.flatten(),bbox):
            className = classNames[classId - 1]
            if className in objects:
                objectInfo.append([box,className])
                if (draw):
                    cv2.rectangle(img,box,color=(0,255,0),thickness=2)
                    cv2.putText(img,classNames[classId-1].upper(),(box[0]+10,box[1]+30),
                    cv2.FONT_HERSHEY_COMPLEX,1,(0,255,0),2)
                    cv2.putText(img,str(round(confidence*100,2)),(box[0]+200,box[1]+30),
                    cv2.FONT_HERSHEY_COMPLEX,1,(0,255,0),2)

    return img,objectInfo
# 辨識紅綠燈顏色的函式
def detect_traffic_light_color(image):
    hsv_image = cv2.cvtColor(image, cv2.COLOR_BGR2HSV)
    
    # 提取紅色區域
    red_mask = cv2.inRange(hsv_image, lower_red, upper_red)
    red_pixels = cv2.countNonZero(red_mask)
    
    # 提取綠色區域
    green_mask = cv2.inRange(hsv_image, lower_green, upper_green)
    green_pixels = cv2.countNonZero(green_mask)
    
    # 根據紅綠像素數量判斷顏色
    if red_pixels > green_pixels:
        return "Red"
    elif green_pixels > red_pixels:
        return "Green"
    else:
        return "Unknown"

if __name__ == "__main__":
    cap = cv2.VideoCapture(0)
    cap.set(3, 640)
    cap.set(4, 480)
    # cap.set(10,70)

    while True:
        success, img = cap.read()
        result, objectInfo = getObjects(img, 0.45, 0.2, objects=['person', 'traffic light'])
        # print(objectInfo)
        objectNames = [info[1] for info in objectInfo]  # 取得物體名稱列表

        if 'person' in objectNames:  # 檢查 objectInfo 中是否包含 'person'
            ser.write(b's')
            response = ser.readline().decode('utf-8')  # 讀取 Arduino 的回應
            LCD1602.clear()
            LCD1602.write(0, 0, 'Detected object:')
            LCD1602.write(1, 1, 'Person')  # 在 LCD 上顯示檢測到的物體名稱
            if response.strip() == "Stop":
                print("Received from Arduino: Car Stop")  # 印出接收到 "Stop" 的訊息
        elif 'traffic light' in objectNames:  # 檢查 objectInfo 中是否包含 'traffic light'
            for info in objectInfo:
                box, className = info
                x, y, w, h = box
                # 從原始影像中擷取紅綠燈區域
                traffic_light_img = img[y:y+h, x:x+w]
                # 辨識紅綠燈顏色
                color = detect_traffic_light_color(traffic_light_img)
                if color == "Green":
                    ser.write(b'g')
                    response = ser.readline().decode('utf-8')  # 讀取 Arduino 的回應
                    LCD1602.clear()
                    LCD1602.write(0, 0, 'Green light')
                    if response.strip() == "Forward":
                        print("car forward") 
                elif color == "Red":
                    ser.write(b's')
                    response = ser.readline().decode('utf-8')  # 讀取 Arduino 的回應
                    LCD1602.clear()
                    LCD1602.write(0, 0, 'Red light')
                    if response.strip() == "Stop":
                        print("Received from Arduino: Car Stop")
                elif color == "Unknown":
                    ser.write(b's')
                    response = ser.readline().decode('utf-8')  # 讀取 Arduino 的回應
                    LCD1602.clear()
                    LCD1602.write(0, 0, 'Unknown')
                    if response.strip() == "Stop":
                        print("Received from Arduino: Car Stop")
                # 在視窗上顯示紅綠燈顏色
                cv2.putText(img, color, (x, y-10), cv2.FONT_HERSHEY_SIMPLEX, 0.9, (0, 255, 0), 2)
        else:
            ser.write(b'g')
            response = ser.readline().decode('utf-8')  # 讀取 Arduino 的回應
            LCD1602.clear()
            LCD1602.write(0, 0, 'Forward')
            if response.strip() == "Forward":
                print("car forward")
            LCD1602.clear()
            LCD1602.write(0, 0, 'Not Detected')
            LCD1602.write(1, 1, '             ')

        cv2.imshow("Output", img)
        cv2.waitKey(1)


